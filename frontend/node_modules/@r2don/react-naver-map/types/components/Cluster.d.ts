import { Ref, type ReactElement } from "react";
import { ClusterOptions } from "../classes";
import type { ArrayToUnion } from "../types";
import type { MarkerRef } from "./marker/type";
interface ClusterPropsOptions extends Omit<Partial<ClusterOptions>, "map" | "markers" | "icons"> {
    icons?: Array<ArrayToUnion<ClusterOptions["icons"]> | ReactElement>;
}
interface ClusterProps {
    children: Array<ReactElement<{
        ref: Ref<MarkerRef>;
    }>>;
    options?: ClusterPropsOptions;
}
export declare const Cluster: ({ children, options }: ClusterProps) => JSX.Element;
export {};
